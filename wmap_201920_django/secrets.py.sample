"""
This file contains settings parameters which shouldn't be committed to a public repository such as GitHub.
Unlike other code files, this file is not managed by git.
It will be read into settings at runtime.

Use this as an example to make a 'secrets.py' file in your project directory (beside settings.py).
"""


def get_secrets():
    SECRETS = {
        'MY_DOMAIN_NAME': '<<your donamin name goes here, e.g. joebloggs.live>>',
        'NGINX_CONF': '<<usually django_nginx.conf>>',
        'SECRET_KEY': '<<whatever django generated is appropriate>>',
        'DATABASES': {
            'default': {
                'ENGINE': 'django.contrib.gis.db.backends.postgis',
                'NAME': '<<your database name>>',
                'HOST': '<<host url or ip address>>',
                'PORT': <<usually 5432 - but you can change this if you gave more than one postgreql instance>>
                'USER': '<<database user name>>',
                'PASSWORD': '<<database user password>>',
            }
        },
        'ALLOWED_HOSTNAMES': [
            '<<the hostname of your computer>>',
        ],

    }

    return SECRETS


def insert_domainname_in_conf(conf_file, my_domain_name):
    """
    We read a 'template' config file and replace domain name as needed
    """
    try:
        with open("nginx_conf_template", "r") as fh:
            conf_text = fh.read()
        conf_text = conf_text.replace("--your-domainname-goes-here--", my_domain_name)
        with open(conf_file, "w") as fh:
            fh.write(conf_text)

    except Exception as e:
        print(f"{e}")
